services:
  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
      - VITE_API_URL=${API_URL}
    volumes: # volumes is for hot reload
      - ./frontend:/frontend # maps local frontend to docker container for frontend --> copies all the code from local frontend to frontend container
      - /frontend/node_modules # this means that u are using the container's node modules instead of copying the local node modules during hot reload (since u didnt run npm install locally)

  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - API_URL=${API_URL}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    volumes: # volumes is for hot reload
      - ./backend:/backend
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"  # Optional: exposes DB for tools like pgAdmin or DBeaver

volumes:
  postgres_data:
